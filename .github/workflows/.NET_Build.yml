name: .NET Build

on:
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  actions: write
  id-token: write
  
jobs:

#   Build_Parameters:
#       runs-on: ubuntu-latest      
#       steps:
      
#         - name: CheckOut SourceCode
#           uses: actions/checkout@v3

#         - name: Set Release Version
#           id: versionid
#           run: | 
#                  echo "Set Release Version"
#                  echo  ${{ github.run_id }}
#                  exit 1

#         - name: Cancel Workflow     
#           if: failure()
#           run: |
#               echo "::error::Cancelling workflow due to one of the jobs failing."
#               gh run cancel ${{ github.run_id }}
#           env:
#            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Build:
    runs-on: ubuntu-latest
    steps:
    
    - uses: actions/checkout@v3
    
#     - name: Setup .NET
#       uses: actions/setup-dotnet@v2
#       with:
#         dotnet-version: 5.0.x
        
    - name: Get Environment Variable
      run: |
          gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/shiyamsundark/sample-dotnet-app/actions/variables/NUGET_VERSION
      env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
#     - name: Build
#       run: |
#            echo "dotnet build --no-restore"
      
#     - name: Package creation
#       run: |
#            mkdir sample_test
#            mv ./bin/Debug/netcoreapp2.2/* ./sample_test
                    
#     - name: Upload a Build Artfifact
#       uses: actions/upload-artifact@v2
#       with:
#         name: sample_test
#         path: ./sample_test
#         retention-days: 1
      
#   sonar:
#      name: Sonar Analysis
#      needs: [Build,Build_Parameters]
#      uses: ./.github/workflows/sonar.yml
     
#   Upload_Artifact_GitHub_Release:
         
#        runs-on: ubuntu-latest
#        needs: [Build,sonar,Build_Parameters]
#        permissions:
#           contents: write
#           packages: write
       
#        steps:
       
#          - uses: actions/checkout@v3   
         
# #          - run: mkdir test
         
# #          - name: Dowload a Build Artfifact
# #            uses: actions/download-artifact@v2
# #            with:
# #              name: sample_test
# #              path: ./test
             
# #          - run : 7z a test.zip ./test
         
# #          - name: Create Github Release
# #            id: create_release
# #            uses: actions/create-release@v1
# #            env:
# #              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
# #            with:
# #              tag_name: test_sample_v1
# #              release_name: sample-test
             
# #          - name: Upload Artifacts to Github Release
# #            uses: actions/upload-release-asset@v1
# #            env:
# #              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
# #            with:
# #               upload_url: ${{ steps.create_release.outputs.upload_url }}
# #               asset_path: ./test.zip
# #               asset_name: sample_test.zip
# #               asset_content_type: application/zip
     
# #   upload:
# #     runs-on: windows-latest
# #     needs: [Build,sonar]
# #     steps:
# #     - uses: actions/checkout@v3
    
# #     - name: Authenticate to GitHub Actions
# #       run: dotnet nuget add source --username shiyamsundark --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/shiyamsundark/index.json"

# #     - name: Pack Package
# #       run: dotnet pack --configuration Release 
      
# #     - name: Publish Package
# #       run: dotnet nuget push "bin/Release/Helloworld.${{needs.Pre-Release.outputs.currentversion}}.nupkg" --source "github"
     
     
 
